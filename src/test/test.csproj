<Project Sdk="Microsoft.Quantum.Sdk/0.20.2111175271-beta">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <QirGeneration>true</QirGeneration>
    <BuildOutputPath>$(MSBuildThisFileDirectory)build</BuildOutputPath>
    <ExecutablePath>$(BuildOutputPath)\$(MSBuildProjectName)</ExecutablePath>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="../lib/Pseudorandom.csproj" />
    <PackageReference Include="Microsoft.Quantum.Qir.Runtime" Version="0.20.2111175271-alpha" GeneratePathProperty="true" />
    <PackageReference Include="Microsoft.Quantum.Simulators" Version="0.20.2111175271-beta" GeneratePathProperty="true" />
  </ItemGroup>

  <!--
  We provide a target that builds an executable in the build folder.
  This is all usually handled by the Sdk and only a temporary set-up for this example.
  -->

  <Target Name="CreateCppDriver">
    <PropertyGroup>
      <DriverCode>
        #include "QirContext.hpp"
        #include "QirRuntime.hpp"
        #include "SimFactory.hpp"

        using namespace Microsoft::Quantum%3B
        using namespace std%3B

        extern "C" void Test__Run()%3B // NOLINT

        int main(int argc, char* argv[]){
            unique_ptr&lt;IRuntimeDriver&gt; sim = CreateFullstateSimulator()%3B
            QirContextScope qirctx(sim.get(), true /*trackAllocatedObjects*/)%3B
            Test__Run()%3B
            return 0%3B
        }
      </DriverCode>
    </PropertyGroup>
    <WriteLinesToFile File="$(BuildOutputPath)\Main.cpp" Overwrite="true" Lines="$(DriverCode)" />
  </Target>

  <Target Name="BuildExecutable" Condition="'$(DesignTimeBuild)' != 'true'" DependsOnTargets="CreateCppDriver;Restore" AfterTargets="QSharpCompile;CoreBuild">
    <PropertyGroup>
      <QirRuntimeHeaders>$(PkgMicrosoft_Quantum_Qir_Runtime)/runtimes/any/native/include</QirRuntimeHeaders>
      <QirRuntimeLibs Condition="$([MSBuild]::IsOsPlatform('OSX'))">$(PkgMicrosoft_Quantum_Qir_Runtime)/runtimes/osx-x64/native</QirRuntimeLibs>
      <QirRuntimeLibs Condition="$([MSBuild]::IsOsPlatform('Windows'))">$(PkgMicrosoft_Quantum_Qir_Runtime)/runtimes/win-x64/native</QirRuntimeLibs>
      <QirRuntimeLibs Condition="$([MSBuild]::IsOsPlatform('Linux'))">$(PkgMicrosoft_Quantum_Qir_Runtime)/runtimes/linux-x64/native</QirRuntimeLibs>
      <SimulatorRuntime Condition="$([MSBuild]::IsOsPlatform('OSX'))">$(PkgMicrosoft_Quantum_Simulators)/runtimes/osx-x64/native/Microsoft.Quantum.Simulator.Runtime.dll</SimulatorRuntime>
      <SimulatorRuntime Condition="$([MSBuild]::IsOsPlatform('Windows'))">$(PkgMicrosoft_Quantum_Simulators)/runtimes/win-x64/native/Microsoft.Quantum.Simulator.Runtime.dll</SimulatorRuntime>
      <SimulatorRuntime Condition="$([MSBuild]::IsOsPlatform('Linux'))">$(PkgMicrosoft_Quantum_Simulators)/runtimes/linux-x64/native/Microsoft.Quantum.Simulator.Runtime.dll</SimulatorRuntime>
      <ClangCommand>clang++ -o $(ExecutablePath) $(QirOutputPath)$(PathCompatibleAssemblyName).ll $(BuildOutputPath)\Main.cpp -I$(BuildOutputPath) -L$(BuildOutputPath) -lMicrosoft.Quantum.Qir.Runtime -lMicrosoft.Quantum.Qir.QSharp.Core -lMicrosoft.Quantum.Qir.QSharp.Foundation</ClangCommand>
    </PropertyGroup>
    <ItemGroup>
      <_QirRuntimeLibFiles Include="$(QirRuntimeLibs)/**/*.*" Exclude="$(QirRuntimeLibs)/**/*.exe" />
      <_QirRuntimeHeaderFiles Include="$(QirRuntimeHeaders)/**/*.hpp" />
      <_QirRuntimeHeaderFiles Include="$(QirRuntimeHeaders)/**/*.h" />
    </ItemGroup>
    <Copy SourceFiles="$(SimulatorRuntime)" DestinationFolder="$(BuildOutputPath)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(_QirRuntimeLibFiles)" DestinationFolder="$(BuildOutputPath)\%(RecursiveDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(_QirRuntimeHeaderFiles)" DestinationFolder="$(BuildOutputPath)\%(RecursiveDir)" SkipUnchangedFiles="true" />
    <Exec Command="$(ClangCommand)" IgnoreExitCode="false" />
  </Target>

</Project>
